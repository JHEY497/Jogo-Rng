<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<title>Jogo RNG 2</title>
<style>
    body {
        display: flex;
        justify-content: center;
        align-items: center;
        font-family: Arial, sans-serif;
        background-color: #f0f0f0;
    }
    .container {
        text-align: center;
        width: 320px;
        background-color: #fff;
        padding: 20px;
        border-radius: 8px;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
    }
    .status-bar {
        display: flex;
        justify-content: space-between;
        margin-bottom: 10px;
        font-size: 0.9em;
    }
    .status-bar span {
        cursor: pointer;
    }
    .card {
        background-color: #e0e0e0;
        border-radius: 8px;
        padding: 10px;
        margin: 10px 0;
        min-height: 80px;
    }
    .rarity {
        font-weight: bold;
        font-size: 1.2em;
    }
    .percentage {
        font-size: 0.8em;
        color: #666;
    }
    .controls {
        display: flex;
        justify-content: space-around;
        margin-top: 10px;
    }
    .btn {
        padding: 8px 14px;
        font-size: 0.9em;
        cursor: pointer;
        border: none;
        border-radius: 5px;
        color: #fff;
        background-color: #4caf50;
    }
    .btn:disabled {
        background-color: #888;
        cursor: not-allowed;
    }
    .upgrades {
        display: none;
        margin-top: 10px;
        text-align: left;
    }
    .upgrades h3 {
        font-size: 1em;
        margin-bottom: 5px;
    }
    .upgrades div {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin: 5px 0;
    }
    .timer {
        font-size: 0.8em;
        color: #888;
        margin-top: 5px;
    }
    .notification {
        font-size: 0.9em;
        color: #4caf50;
        margin-top: 10px;
    }
</style>
</head>
<body>
<div class="container">
    <div class="status-bar">
        <span class="missions">Girar 10 vezes (0/10)</span>
        <span class="money">ðŸ’°0</span>
        <span class="stats">ðŸ“›</span>
    </div>
    <div class="card">
        <div class="rarity">Rarity: Common</div>
        <div class="price">Price: 5</div>
        <div class="percentage">Chance: 50%</div>
    </div>
    <div class="timer">Time: 1.5s</div>
    <div class="controls">
        <button class="btn roll-btn">Roll</button>
        <button class="btn upgrade-btn">Upgrades</button>
    </div>
    <div class="upgrades">
        <h3>Upgrades</h3>
        <div>
            <span>Reduzir tempo -0.1s</span>
            <button class="btn buy-time">Compra = 50</button>
        </div>
    </div>
    <div class="notification"></div>
</div>

<script>
    let money = 0;
    let missionCount = 0;
    let missionTarget = 10;
    let rollCooldown = 1.5;
    let cooldownActive = false;
    let upgradePrice = 50;
    const minCooldown = 0.3;
    let bestRarity = { name: "Common", price: 5 };

    const moneyDisplay = document.querySelector('.money');
    const missionDisplay = document.querySelector('.missions');
    const rollBtn = document.querySelector('.roll-btn');
    const timerDisplay = document.querySelector('.timer');
    const upgradeBtn = document.querySelector('.upgrade-btn');
    const upgradesSection = document.querySelector('.upgrades');
    const buyTimeUpgrade = document.querySelector('.buy-time');
    const rarityDisplay = document.querySelector('.rarity');
    const priceDisplay = document.querySelector('.price');
    const percentageDisplay = document.querySelector('.percentage');
    const statsDisplay = document.querySelector('.stats');
    const notificationDisplay = document.querySelector('.notification');

    const rarities = [
        { name: 'Common', chance: 50, price: 5, color: 'gray' },
        { name: 'Rare', chance: 30, price: 20, color: 'blue' },
        { name: 'Epic', chance: 15, price: 50, color: 'purple' },
        { name: 'Legendary', chance: 5, price: 100, color: 'gold' },
    ];

    function updateUI() {
        moneyDisplay.textContent = `ðŸ’°${money}`;
        missionDisplay.textContent = `Girar ${missionTarget} vezes (${missionCount}/${missionTarget})`;
        timerDisplay.textContent = `Time: ${rollCooldown.toFixed(1)}s`;
        buyTimeUpgrade.textContent = `Compra = ${upgradePrice}`;
    }

    function rollItem() {
        if (cooldownActive) return;
        cooldownActive = true;
        rollBtn.disabled = true;

        let rollChance = Math.random() * 100;
        let accumulatedChance = 0;
        for (const rarity of rarities) {
            accumulatedChance += rarity.chance;
            if (rollChance <= accumulatedChance) {
                rarityDisplay.textContent = rarity.name;
                priceDisplay.textContent = `Price: ${rarity.price}`;
                percentageDisplay.textContent = `Chance: ${rarity.chance}%`;
                rarityDisplay.style.color = rarity.color;
                money += rarity.price;

                if (rarity.price > bestRarity.price) {
                    bestRarity = rarity;
                }

                if (missionCount < missionTarget) missionCount++;
                else completeMission();

                break;
            }
        }

        updateUI();

        let countdown = rollCooldown;
        const interval = setInterval(() => {
            countdown -= 0.1;
            timerDisplay.textContent = `Time: ${countdown.toFixed(1)}s`;
            if (countdown <= 0) {
                clearInterval(interval);
                cooldownActive = false;
                rollBtn.disabled = false;
                timerDisplay.textContent = `Time: ${rollCooldown.toFixed(1)}s`;
            }
        }, 100);
    }

    function completeMission() {
        const reward = 20;
        money += reward;
        notificationDisplay.textContent = `MissÃ£o ConcluÃ­da! +${reward}`;
        setTimeout(() => notificationDisplay.textContent = '', 3000);

        missionCount = 0;
        missionTarget += 10;
    }

    function buyTimeReduction() {
        if (money >= upgradePrice && rollCooldown > minCooldown) {
            money -= upgradePrice;
            rollCooldown = Math.max(minCooldown, rollCooldown - 0.1);
            upgradePrice += 10;
            updateUI();
        } else {
            alert("Dinheiro insuficiente ou tempo mÃ­nimo atingido!");
        }
    }

    function showStats() {
        alert(`Melhor Giro: ${bestRarity.name}\nTotal de Giros: ${missionCount}`);
    }

    rollBtn.addEventListener('click', rollItem);
    upgradeBtn.addEventListener('click', () => {
        upgradesSection.style.display = upgradesSection.style.display === 'none' ? 'block' : 'none';
    });
    buyTimeUpgrade.addEventListener('click', buyTimeReduction);
    statsDisplay.addEventListener('click', showStats);

    updateUI();
</script>
</body>
</html>
